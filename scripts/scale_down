#!/usr/bin/env python

import sys
from PIL import Image

def scale_down_image(input_path, scale_factor):
    # Open the image
    with Image.open(input_path) as img:
        # Calculate the new size
        new_size = (int(img.width * scale_factor), int(img.height * scale_factor))
        
        # Resize the image
        scaled_img = img.resize(new_size, Image.Resampling.LANCZOS)
        
        # Overwrite the original file with the scaled image
        scaled_img.save(input_path)
        
        print(f"Image scaled by {scale_factor} and overwritten: {input_path}")

# Check if input paths were provided
if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: python scale_down.py [--scale=<factor>] <image_path1> <image_path2> ...")
        sys.exit(1)
    
    # Default scale factor
    scale_factor = 1.0
    
    # Parse arguments
    files = []
    for arg in sys.argv[1:]:
        if arg.startswith("--scale="):
            try:
                scale_factor = float(arg.split("=", 1)[1])
                if scale_factor <= 0:
                    raise ValueError("Scale factor must be positive.")
            except ValueError as e:
                print(f"Invalid scale value: {e}")
                sys.exit(1)
        else:
            files.append(arg)
    
    if not files:
        print("No image files specified.")
        sys.exit(1)

    # Process each file
    for input_path in files:
        try:
            scale_down_image(input_path, scale_factor)
        except Exception as e:
            print(f"Error processing {input_path}: {e}")